!SESSION 2023-05-10 14:52:53.650 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file C:\ASL\Universidad\4to_curso\SNGPS\SNGPS\Programa\.metadata\.bak_1.log
Created Time: 2023-05-11 14:54:10.888

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-05-11 14:54:10.888
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-11 14:54:11.631
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package LaPrac;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.awt.geom.AffineTransform;
import java.net.MalformedURLException;
import java.net.URL;

import javax.swing.JFrame;

public class MyCanvas /*extends Canvas*/ implements WindowListener{
	
	private int x = 0;
	private int y = 0;
	
	private String imageName = "ImagenUPMeINSIA.PNG"; // Imagen por defecto
	private int imageHeight = 0;
	private int imageWidth = 0;
	
	private double factorCanvasX = 1.0;
	private double factorCanvasY = 1.0;
	
	private double latitudGrados = 0.0; //40.36005333333333; //40.3866;
	private double longitudGrados = 0.0; //-3.5510916666666663; //-3.6319; 
	
	private Color miColor = Color.GREEN;
	
	private String velocidadTexto = "TEST km/h";
	
	private String UTMTexto = "XXXX";
	
	private double angulo = Math.PI;
	
	private double anchoAlto = 950; // Número de píxeles de ancho por alto
	
	// Map resolution = 156543.04 meters/pixel * cos(latitude) / (2 ^ zoomlevel)
	private double zoomLevel = 20;
	
	private Image[][] mapa = {
			{null, null, null},
			{null, null, null},
			{null, null, null}
			};
	
	/*
	 *            No olvidemos que desplazamiento[0] positivo implica que la imagen debe moverse hacia el Sur y desplazamieno[1] positivo es irse al este
	 * 00 01 02
	 * 10 11 12   12 es el centro
	 * 20 21 22
	 */
	
	private double[] desplazamiento = {0.0, 0.0}; // Norte  y Este
	private double pixelMetro = 1.0;
	
	private boolean primeraVez = true;
	DrawingPanel panel = new DrawingPanel(955 + 200, 950);
	
	public void MyCanvas() {
		this.panel = new DrawingPanel(955 + 200, 950);
	}
	
	public boolean isPrimeraVez() {
		return primeraVez;
	}

	public void setPrimeraVez(boolean primeraVez) {
		this.primeraVez = primeraVez;
	}

	public double getLatitudGrados() {
		return latitudGrados;
	}
	
	public double getZoomLevel() {
		return zoomLevel;
	}

	public void setZoomLevel(double zoomLevel) {
		this.zoomLevel = zoomLevel;
	}

	public double resolucionMapa() {
		return (156543.04  * Math.cos(latitudGrados) / (Math.pow(2, this.zoomLevel) )); // Según BingMaps
		// Objetivo: sabiendo la resolucion, si movemos el mapa arriba debe moverlo adecuadamente
	}

	public void addDesplazamiento(double[] desplazamiento) {
		this.desplazamiento[0] += desplazamiento[0];
		this.desplazamiento[1] += desplazamiento[1];
	}

	public void setLatitudGrados(double latitudGrados) {
		this.latitudGrados = latitudGrados;
	}

	public double getLongitudGrados() {
		return longitudGrados;
	}

	public void setLongitudGrados(double longitudGrados) {
		this.longitudGrados = longitudGrados;
	}

	public double getAngulo() {
		return angulo;
	}

	public void setAngulo(double angulo) {
		this.angulo = angulo%(2*Math.PI);
	}

	public Color getMiColor() {
		return miColor;
	}

	public void setMiColor(Color miColor) {
		this.miColor = miColor;
	}

	public String getVelocidadTexto() {
		return velocidadTexto;
	}

	public void setVelocidadTexto(String velocidadTexto) {
		this.velocidadTexto = velocidadTexto;
	}

	public int getX() {
		return x;
	}

	public void setX(double x) {
		this.x = (int) (x * factorCanvasX);
	}

	public int getY() {
		return y;
	}

	public void setY(double y) {
		this.y = (int) (y * factorCanvasY);
	}

	public String getUTMTexto() {
		return UTMTexto;
	}

	public void setUTMTexto(String uTMTexto) {
		UTMTexto = uTMTexto;
	}

	public String getImageName() {
		return imageName;
	}

	public void setImageName(String imageName) {
		this.imageName = imageName;
	}

	public double getFactorCanvasX() {
		return factorCanvasX;
	}

	public void setFactorCanvasX(double escalaOriginalX) {
		this.factorCanvasX = imageWidth/escalaOriginalX;
	}

	public double getFactorCanvasY() {
		return factorCanvasY;
	}

	public void setFactorCanvasY(double escalaOriginalY) {
		this.factorCanvasY = imageHeight/escalaOriginalY;
	}
	
	public void repaint() {
		this.paint();
	}
	public void paint() {
		
		Graphics g = this.panel.getGraphics();
		pixelMetro = resolucionMapa();
		g.setColor(Color.BLACK);
        g.fillRect(0, 0, 955 + 200, 950);
		
		if(this.mapa[1][1] == null && this.primeraVez == false) { // Si la imagen central no está o no nos han mandado pintar antes, pues la cargamos

			try {
				System.out.println("CARGANDO COORDENADAS");
				
				//this.mapa[1][1] = t.getImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/40.3866,-3.6319?mapSize=1900,1900&zoomlevel=18&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
				// La de abajo aprece funcionar, pero si pongo el 18 como parámetro se rompe
				
				if (mapa[1][1] != null) this.mapa[1][1].flush();
				Toolkit t = Toolkit.getDefaultToolkit();
				
				String url = "https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt";
				Image temp;
				
				temp = //t.getImage(new URL(url));
				t.createImage(new URL(url));
				System.out.println("Pidiendo imagen de "+url);
				this.mapa[1][1] = temp;
				this.desplazamiento[0] = 0.0;
				this.desplazamiento[1] = 0.0;
				} catch (MalformedURLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
		} else {
			System.out.println("EL CENTRAL NO ES NULL");
		}
		
		System.out.println("Mi desplazamiento es"+(desplazamiento[0] * pixelMetro));
		
		//Toolkit t = Toolkit.getDefaultToolkit();
		
		if (desplazamiento[0] / pixelMetro < -anchoAlto/2) {
			System.out.println("21 es centro ahora");
			/*            
			 * 00 01 02
			 * 10 11 12   
			 * 20 21 22   21 es el centro ahora
			 *  n  n  n
			 */
			Image centro = null;
			
			if(this.mapa[2][1] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[2][1];
			
			Image[][] mapaAux = {
					{this.mapa[1][0], this.mapa[1][1], this.mapa[1][2]},
					{this.mapa[2][0], centro, this.mapa[2][2]},
					{null, null, null}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[0] = 0.0; // Reseteamos el desplazamiento N
			//desplazamiento[1] = 0.0;
			
		} else if (desplazamiento[0] / pixelMetro > anchoAlto/2) {
			System.out.println("01 es centro ahora");
			/ *  n  n  n           
			 * 00 01 02   01 es el centro ahora
			 * 10 11 12   
			 * 20 21 22
			 */
			Image centro = null;
			
			if(this.mapa[0][1] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[0][1];
			
			Image[][] mapaAux = {
					{null, null, null},
					{this.mapa[0][0], centro, this.mapa[0][2]},
					{this.mapa[1][0], this.mapa[1][1], this.mapa[1][2]}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[0] = 0.0; // Reseteamos el desplazamiento N
			//desplazamiento[1] = 0.0;
			
		}
		// ESTE-OESTE
		if (desplazamiento[1] / pixelMetro < -anchoAlto/2) {
			System.out.println("10 es centro ahora");
			/ *            
			 *  n 00 01 02   
			 *  n 10 11 12   10 es el centro ahora
			 *  n 20 21 22
			 * 
			 * /
			Image centro = null;
			
			if(this.mapa[1][0] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[1][0];
			
			Image[][] mapaAux = {
					{null, this.mapa[0][0], this.mapa[0][1]},
					{null, centro, this.mapa[1][1]},
					{null, this.mapa[2][0], this.mapa[2][1]}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[1] = 0.0; // Reseteamos el desplazamiento E
			//desplazamiento[0] = 0.0;
			
		} else if (desplazamiento[1] / pixelMetro > anchoAlto/2) {
			System.out.println("12 es centro ahora");
			/ *            
			 * 00 01 02 n  
			 * 10 11 12 n   12 es el centro ahora
			 * 20 21 22 n
			 * 
			 * /
			Image centro = null;
			
			if(this.mapa[1][2] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[1][2];
			
			Image[][] mapaAux = {
					{this.mapa[0][1], this.mapa[0][2], null},
					{this.mapa[1][1], centro, null},
					{this.mapa[2][1], this.mapa[2][2], null}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[1] = 0.0; // Reseteamos el desplazamiento E
			desplazamiento[0] = 0.0;
		}
		/*
		// Para cada imagen del cuadrado transformamos
		Graphics2D g2d = (Graphics2D) g;
		// at.translate(this.x-img.getWidth(null) / 2, this.y-img.getHeight(null) / 2);
		AffineTransform atA1 = AffineTransform.getTranslateInstance(0, 0);
		atA1.translate(-this.desplazamiento[1]/pixelMetro - this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro -this.anchoAlto / 2);
		AffineTransform atA2 = AffineTransform.getTranslateInstance(0, 0);
		atA2.translate(-this.desplazamiento[1]/pixelMetro, this.desplazamiento[0]/pixelMetro -this.anchoAlto / 2);
		AffineTransform atA3 = AffineTransform.getTranslateInstance(0, 0);
		atA3.translate(-this.desplazamiento[1]/pixelMetro + this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro -this.anchoAlto / 2);
		
		AffineTransform atB1 = AffineTransform.getTranslateInstance(0, 0);
		atA1.translate(-this.desplazamiento[1]/pixelMetro - this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro);
		AffineTransform atB2 = AffineTransform.getTranslateInstance(0, 0);
		atB2.translate((this.desplazamiento[1]/pixelMetro -this.anchoAlto/2), (-this.desplazamiento[0]/pixelMetro -this.anchoAlto/2));
		AffineTransform atB3 = AffineTransform.getTranslateInstance(0, 0);
		atA1.translate(-this.desplazamiento[1]/pixelMetro + this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro);
		
		AffineTransform atC1 = AffineTransform.getTranslateInstance(0, 0);
		atC1.translate(-this.desplazamiento[1]/pixelMetro - this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro +this.anchoAlto / 2);
		AffineTransform atC2 = AffineTransform.getTranslateInstance(0, 0);
		atA2.translate(-this.desplazamiento[1]/pixelMetro, this.desplazamiento[0]/pixelMetro +this.anchoAlto / 2);
		AffineTransform atC3 = AffineTransform.getTranslateInstance(0, 0);
		atC3.translate(-this.desplazamiento[1]/pixelMetro + this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro +this.anchoAlto / 2);
		
		// Luego las pintamos de tal forma que la imagen central esté por encima y le sigan las demás por distancia ortogonal
        if (this.mapa[0][0] != null) g2d.drawImage(this.mapa[0][0], atA1, null); else System.out.println("E");
        if (this.mapa[0][2] != null) g2d.drawImage(this.mapa[0][2], atA3, null); else System.out.println("E");
        if (this.mapa[2][0] != null) g2d.drawImage(this.mapa[2][0], atC1, null); else System.out.println("E");
        if (this.mapa[2][2] != null) g2d.drawImage(this.mapa[2][2], atC3, null); else System.out.println("E");
		
        if (this.mapa[0][1] != null) g2d.drawImage(this.mapa[0][1], atA2, null); else System.out.println("E");
        if (this.mapa[1][0] != null) g2d.drawImage(this.mapa[1][0], atB1, null); else System.out.println("E");
        if (this.mapa[1][2] != null) g2d.drawImage(this.mapa[1][2], atB3, null); else System.out.println("E");
        if (this.mapa[2][1] != null) g2d.drawImage(this.mapa[2][1], atC2, null); else System.out.println("E");
        */
        if (this.mapa[1][1] != null && this.mapa[1][1].getWidth(null) != -1) { // Si la imagen está apropiadamente cargada
        	g.drawImage(this.mapa[1][1], (int)(this.desplazamiento[1]/pixelMetro -this.anchoAlto/2), (int)(-this.desplazamiento[0]/pixelMetro -this.anchoAlto/2), null);
        }
        
		// Flecha
        Toolkit t = Toolkit.getDefaultToolkit();
		Image img = t.getImage("pointIII.png");
        
        AffineTransform at = AffineTransform.getTranslateInstance(0, 0);
        at.translate(this.anchoAlto / 2, this.anchoAlto / 2);
		at.rotate(this.angulo,img.getWidth(null) / 2, img.getHeight(null) / 2);
		
		g2d.drawImage(img, at, null);
        
		// UI
        g.setColor(Color.LIGHT_GRAY);
        g.fillRect((int)this.anchoAlto, 0, 200, (int)this.anchoAlto);
        g.setColor(miColor);
        g.fillRect((int)this.anchoAlto, 0, 140 + 50, 100);

        g.setColor(Color.black); 
        Font fuente = g.getFont();
        Font fuente2 = fuente.deriveFont(200);
        g.setFont(fuente2);
        g.drawChars(velocidadTexto.toCharArray(), 0, velocidadTexto.length(), (int)(this.anchoAlto) + 15, 25);
        g.drawChars(UTMTexto.toCharArray(), 0, UTMTexto.length(), (int)(this.anchoAlto) + 15, 125);
        String lat = String.valueOf(this.latitudGrados);
        String lon = String.valueOf(this.longitudGrados);
        
        g.drawChars(lat.toCharArray(), 0, lat.length(), (int)(this.anchoAlto) + 15, 200);
        g.drawChars(lon.toCharArray(), 0, lon.length(), (int)(this.anchoAlto) + 15, 220);
        System.out.println("Primera vez = "+this.primeraVez);
        panel.copyGraphicsToScreen();
	}
	
	public static void main(String[] losArgumentos) {
		MyCanvas m = new MyCanvas();
		m.setImageName("ImagenINSIA.PNG");
		m.paint();
		/*JFrame f = new JFrame("Practica 2: Sistema de Geolocalizacion UPM-INSIA");
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		f.add(m);
		f.setSize(955 + 200, 950);
		f.setLocation(300, 0);
		f.setVisible(true);
		System.out.println("Imagen");
		f.addWindowListener(m);*/
	}

	@Override
	public void windowOpened(WindowEvent e) {
		// TODO Auto-generated method stub
		System.out.println("Ventana abierta");
		
	}

	@Override
	public void windowClosing(WindowEvent e) {
		// TODO Auto-generated method stub
		System.out.println("Ventana cerrandose, cerrando programa");
		System.exit(0);
		
	}

	@Override
	public void windowClosed(WindowEvent e) {
		// TODO Auto-generated method stub
		System.out.println("Ventana cerrada, cerrando programa");
		System.exit(0);
	}

	@Override
	public void windowIconified(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowDeiconified(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowActivated(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowDeactivated(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2219)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-11 14:54:11.632
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2219)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-11 14:54:11.632
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2219)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-11 14:54:12.655
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package LaPrac;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.awt.geom.AffineTransform;
import java.net.MalformedURLException;
import java.net.URL;

import javax.swing.JFrame;

public class MyCanvas /*extends Canvas*/ implements WindowListener{
	
	private int x = 0;
	private int y = 0;
	
	private String imageName = "ImagenUPMeINSIA.PNG"; // Imagen por defecto
	private int imageHeight = 0;
	private int imageWidth = 0;
	
	private double factorCanvasX = 1.0;
	private double factorCanvasY = 1.0;
	
	private double latitudGrados = 0.0; //40.36005333333333; //40.3866;
	private double longitudGrados = 0.0; //-3.5510916666666663; //-3.6319; 
	
	private Color miColor = Color.GREEN;
	
	private String velocidadTexto = "TEST km/h";
	
	private String UTMTexto = "XXXX";
	
	private double angulo = Math.PI;
	
	private double anchoAlto = 950; // Número de píxeles de ancho por alto
	
	// Map resolution = 156543.04 meters/pixel * cos(latitude) / (2 ^ zoomlevel)
	private double zoomLevel = 20;
	
	private Image[][] mapa = {
			{null, null, null},
			{null, null, null},
			{null, null, null}
			};
	
	/*
	 *            No olvidemos que desplazamiento[0] positivo implica que la imagen debe moverse hacia el Sur y desplazamieno[1] positivo es irse al este
	 * 00 01 02
	 * 10 11 12   12 es el centro
	 * 20 21 22
	 */
	
	private double[] desplazamiento = {0.0, 0.0}; // Norte  y Este
	private double pixelMetro = 1.0;
	
	private boolean primeraVez = true;
	DrawingPanel panel = new DrawingPanel(955 + 200, 950);
	
	public void MyCanvas() {
		this.panel = new DrawingPanel(955 + 200, 950);
	}
	
	public boolean isPrimeraVez() {
		return primeraVez;
	}

	public void setPrimeraVez(boolean primeraVez) {
		this.primeraVez = primeraVez;
	}

	public double getLatitudGrados() {
		return latitudGrados;
	}
	
	public double getZoomLevel() {
		return zoomLevel;
	}

	public void setZoomLevel(double zoomLevel) {
		this.zoomLevel = zoomLevel;
	}

	public double resolucionMapa() {
		return (156543.04  * Math.cos(latitudGrados) / (Math.pow(2, this.zoomLevel) )); // Según BingMaps
		// Objetivo: sabiendo la resolucion, si movemos el mapa arriba debe moverlo adecuadamente
	}

	public void addDesplazamiento(double[] desplazamiento) {
		this.desplazamiento[0] += desplazamiento[0];
		this.desplazamiento[1] += desplazamiento[1];
	}

	public void setLatitudGrados(double latitudGrados) {
		this.latitudGrados = latitudGrados;
	}

	public double getLongitudGrados() {
		return longitudGrados;
	}

	public void setLongitudGrados(double longitudGrados) {
		this.longitudGrados = longitudGrados;
	}

	public double getAngulo() {
		return angulo;
	}

	public void setAngulo(double angulo) {
		this.angulo = angulo%(2*Math.PI);
	}

	public Color getMiColor() {
		return miColor;
	}

	public void setMiColor(Color miColor) {
		this.miColor = miColor;
	}

	public String getVelocidadTexto() {
		return velocidadTexto;
	}

	public void setVelocidadTexto(String velocidadTexto) {
		this.velocidadTexto = velocidadTexto;
	}

	public int getX() {
		return x;
	}

	public void setX(double x) {
		this.x = (int) (x * factorCanvasX);
	}

	public int getY() {
		return y;
	}

	public void setY(double y) {
		this.y = (int) (y * factorCanvasY);
	}

	public String getUTMTexto() {
		return UTMTexto;
	}

	public void setUTMTexto(String uTMTexto) {
		UTMTexto = uTMTexto;
	}

	public String getImageName() {
		return imageName;
	}

	public void setImageName(String imageName) {
		this.imageName = imageName;
	}

	public double getFactorCanvasX() {
		return factorCanvasX;
	}

	public void setFactorCanvasX(double escalaOriginalX) {
		this.factorCanvasX = imageWidth/escalaOriginalX;
	}

	public double getFactorCanvasY() {
		return factorCanvasY;
	}

	public void setFactorCanvasY(double escalaOriginalY) {
		this.factorCanvasY = imageHeight/escalaOriginalY;
	}
	
	public void repaint() {
		this.paint();
	}
	public void paint() {
		
		Graphics g = this.panel.getGraphics();
		pixelMetro = resolucionMapa();
		g.setColor(Color.BLACK);
        g.fillRect(0, 0, 955 + 200, 950);
		
		if(this.mapa[1][1] == null && this.primeraVez == false) { // Si la imagen central no está o no nos han mandado pintar antes, pues la cargamos

			try {
				System.out.println("CARGANDO COORDENADAS");
				
				//this.mapa[1][1] = t.getImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/40.3866,-3.6319?mapSize=1900,1900&zoomlevel=18&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
				// La de abajo aprece funcionar, pero si pongo el 18 como parámetro se rompe
				
				if (mapa[1][1] != null) this.mapa[1][1].flush();
				Toolkit t = Toolkit.getDefaultToolkit();
				
				String url = "https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt";
				Image temp;
				
				temp = //t.getImage(new URL(url));
				t.createImage(new URL(url));
				System.out.println("Pidiendo imagen de "+url);
				this.mapa[1][1] = temp;
				this.desplazamiento[0] = 0.0;
				this.desplazamiento[1] = 0.0;
				} catch (MalformedURLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
		} else {
			System.out.println("EL CENTRAL NO ES NULL");
		}
		
		System.out.println("Mi desplazamiento es"+(desplazamiento[0] * pixelMetro));
		
		//Toolkit t = Toolkit.getDefaultToolkit();
		
		if (desplazamiento[0] / pixelMetro < -anchoAlto/2) {
			System.out.println("21 es centro ahora");
			/*            
			 * 00 01 02
			 * 10 11 12   
			 * 20 21 22   21 es el centro ahora
			 *  n  n  n
			 */
			Image centro = null;
			
			if(this.mapa[2][1] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[2][1];
			
			Image[][] mapaAux = {
					{this.mapa[1][0], this.mapa[1][1], this.mapa[1][2]},
					{this.mapa[2][0], centro, this.mapa[2][2]},
					{null, null, null}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[0] = 0.0; // Reseteamos el desplazamiento N
			//desplazamiento[1] = 0.0;
			
		} else if (desplazamiento[0] / pixelMetro > anchoAlto/2) {
			System.out.println("01 es centro ahora");
			/ *  n  n  n           
			 * 00 01 02   01 es el centro ahora
			 * 10 11 12   
			 * 20 21 22
			 * /
			Image centro = null;
			
			if(this.mapa[0][1] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[0][1];
			
			Image[][] mapaAux = {
					{null, null, null},
					{this.mapa[0][0], centro, this.mapa[0][2]},
					{this.mapa[1][0], this.mapa[1][1], this.mapa[1][2]}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[0] = 0.0; // Reseteamos el desplazamiento N
			//desplazamiento[1] = 0.0;
			
		}
		// ESTE-OESTE
		if (desplazamiento[1] / pixelMetro < -anchoAlto/2) {
			System.out.println("10 es centro ahora");
			/ *            
			 *  n 00 01 02   
			 *  n 10 11 12   10 es el centro ahora
			 *  n 20 21 22
			 * 
			 * /
			Image centro = null;
			
			if(this.mapa[1][0] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[1][0];
			
			Image[][] mapaAux = {
					{null, this.mapa[0][0], this.mapa[0][1]},
					{null, centro, this.mapa[1][1]},
					{null, this.mapa[2][0], this.mapa[2][1]}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[1] = 0.0; // Reseteamos el desplazamiento E
			//desplazamiento[0] = 0.0;
			
		} else if (desplazamiento[1] / pixelMetro > anchoAlto/2) {
			System.out.println("12 es centro ahora");
			/ *            
			 * 00 01 02 n  
			 * 10 11 12 n   12 es el centro ahora
			 * 20 21 22 n
			 * 
			 * /
			Image centro = null;
			
			if(this.mapa[1][2] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[1][2];
			
			Image[][] mapaAux = {
					{this.mapa[0][1], this.mapa[0][2], null},
					{this.mapa[1][1], centro, null},
					{this.mapa[2][1], this.mapa[2][2], null}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[1] = 0.0; // Reseteamos el desplazamiento E
			desplazamiento[0] = 0.0;
		}
		/*
		// Para cada imagen del cuadrado transformamos
		Graphics2D g2d = (Graphics2D) g;
		// at.translate(this.x-img.getWidth(null) / 2, this.y-img.getHeight(null) / 2);
		AffineTransform atA1 = AffineTransform.getTranslateInstance(0, 0);
		atA1.translate(-this.desplazamiento[1]/pixelMetro - this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro -this.anchoAlto / 2);
		AffineTransform atA2 = AffineTransform.getTranslateInstance(0, 0);
		atA2.translate(-this.desplazamiento[1]/pixelMetro, this.desplazamiento[0]/pixelMetro -this.anchoAlto / 2);
		AffineTransform atA3 = AffineTransform.getTranslateInstance(0, 0);
		atA3.translate(-this.desplazamiento[1]/pixelMetro + this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro -this.anchoAlto / 2);
		
		AffineTransform atB1 = AffineTransform.getTranslateInstance(0, 0);
		atA1.translate(-this.desplazamiento[1]/pixelMetro - this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro);
		AffineTransform atB2 = AffineTransform.getTranslateInstance(0, 0);
		atB2.translate((this.desplazamiento[1]/pixelMetro -this.anchoAlto/2), (-this.desplazamiento[0]/pixelMetro -this.anchoAlto/2));
		AffineTransform atB3 = AffineTransform.getTranslateInstance(0, 0);
		atA1.translate(-this.desplazamiento[1]/pixelMetro + this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro);
		
		AffineTransform atC1 = AffineTransform.getTranslateInstance(0, 0);
		atC1.translate(-this.desplazamiento[1]/pixelMetro - this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro +this.anchoAlto / 2);
		AffineTransform atC2 = AffineTransform.getTranslateInstance(0, 0);
		atA2.translate(-this.desplazamiento[1]/pixelMetro, this.desplazamiento[0]/pixelMetro +this.anchoAlto / 2);
		AffineTransform atC3 = AffineTransform.getTranslateInstance(0, 0);
		atC3.translate(-this.desplazamiento[1]/pixelMetro + this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro +this.anchoAlto / 2);
		
		// Luego las pintamos de tal forma que la imagen central esté por encima y le sigan las demás por distancia ortogonal
        if (this.mapa[0][0] != null) g2d.drawImage(this.mapa[0][0], atA1, null); else System.out.println("E");
        if (this.mapa[0][2] != null) g2d.drawImage(this.mapa[0][2], atA3, null); else System.out.println("E");
        if (this.mapa[2][0] != null) g2d.drawImage(this.mapa[2][0], atC1, null); else System.out.println("E");
        if (this.mapa[2][2] != null) g2d.drawImage(this.mapa[2][2], atC3, null); else System.out.println("E");
		
        if (this.mapa[0][1] != null) g2d.drawImage(this.mapa[0][1], atA2, null); else System.out.println("E");
        if (this.mapa[1][0] != null) g2d.drawImage(this.mapa[1][0], atB1, null); else System.out.println("E");
        if (this.mapa[1][2] != null) g2d.drawImage(this.mapa[1][2], atB3, null); else System.out.println("E");
        if (this.mapa[2][1] != null) g2d.drawImage(this.mapa[2][1], atC2, null); else System.out.println("E");
        */
        if (this.mapa[1][1] != null && this.mapa[1][1].getWidth(null) != -1) { // Si la imagen está apropiadamente cargada
        	g.drawImage(this.mapa[1][1], (int)(this.desplazamiento[1]/pixelMetro -this.anchoAlto/2), (int)(-this.desplazamiento[0]/pixelMetro -this.anchoAlto/2), null);
        }
        
		// Flecha
        Toolkit t = Toolkit.getDefaultToolkit();
		Image img = t.getImage("pointIII.png");
        
        AffineTransform at = AffineTransform.getTranslateInstance(0, 0);
        at.translate(this.anchoAlto / 2, this.anchoAlto / 2);
		at.rotate(this.angulo,img.getWidth(null) / 2, img.getHeight(null) / 2);
		
		g2d.drawImage(img, at, null);
        
		// UI
        g.setColor(Color.LIGHT_GRAY);
        g.fillRect((int)this.anchoAlto, 0, 200, (int)this.anchoAlto);
        g.setColor(miColor);
        g.fillRect((int)this.anchoAlto, 0, 140 + 50, 100);

        g.setColor(Color.black); 
        Font fuente = g.getFont();
        Font fuente2 = fuente.deriveFont(200);
        g.setFont(fuente2);
        g.drawChars(velocidadTexto.toCharArray(), 0, velocidadTexto.length(), (int)(this.anchoAlto) + 15, 25);
        g.drawChars(UTMTexto.toCharArray(), 0, UTMTexto.length(), (int)(this.anchoAlto) + 15, 125);
        String lat = String.valueOf(this.latitudGrados);
        String lon = String.valueOf(this.longitudGrados);
        
        g.drawChars(lat.toCharArray(), 0, lat.length(), (int)(this.anchoAlto) + 15, 200);
        g.drawChars(lon.toCharArray(), 0, lon.length(), (int)(this.anchoAlto) + 15, 220);
        System.out.println("Primera vez = "+this.primeraVez);
        panel.copyGraphicsToScreen();
	}
	
	public static void main(String[] losArgumentos) {
		MyCanvas m = new MyCanvas();
		m.setImageName("ImagenINSIA.PNG");
		m.paint();
		/*JFrame f = new JFrame("Practica 2: Sistema de Geolocalizacion UPM-INSIA");
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		f.add(m);
		f.setSize(955 + 200, 950);
		f.setLocation(300, 0);
		f.setVisible(true);
		System.out.println("Imagen");
		f.addWindowListener(m);*/
	}

	@Override
	public void windowOpened(WindowEvent e) {
		// TODO Auto-generated method stub
		System.out.println("Ventana abierta");
		
	}

	@Override
	public void windowClosing(WindowEvent e) {
		// TODO Auto-generated method stub
		System.out.println("Ventana cerrandose, cerrando programa");
		System.exit(0);
		
	}

	@Override
	public void windowClosed(WindowEvent e) {
		// TODO Auto-generated method stub
		System.out.println("Ventana cerrada, cerrando programa");
		System.exit(0);
	}

	@Override
	public void windowIconified(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowDeiconified(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowActivated(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowDeactivated(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2219)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-05-11 14:54:12.656
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2219)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-05-11 14:54:12.656
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2219)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-11 14:54:12.684
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package LaPrac;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.awt.geom.AffineTransform;
import java.net.MalformedURLException;
import java.net.URL;

import javax.swing.JFrame;

public class MyCanvas /*extends Canvas*/ implements WindowListener{
	
	private int x = 0;
	private int y = 0;
	
	private String imageName = "ImagenUPMeINSIA.PNG"; // Imagen por defecto
	private int imageHeight = 0;
	private int imageWidth = 0;
	
	private double factorCanvasX = 1.0;
	private double factorCanvasY = 1.0;
	
	private double latitudGrados = 0.0; //40.36005333333333; //40.3866;
	private double longitudGrados = 0.0; //-3.5510916666666663; //-3.6319; 
	
	private Color miColor = Color.GREEN;
	
	private String velocidadTexto = "TEST km/h";
	
	private String UTMTexto = "XXXX";
	
	private double angulo = Math.PI;
	
	private double anchoAlto = 950; // Número de píxeles de ancho por alto
	
	// Map resolution = 156543.04 meters/pixel * cos(latitude) / (2 ^ zoomlevel)
	private double zoomLevel = 20;
	
	private Image[][] mapa = {
			{null, null, null},
			{null, null, null},
			{null, null, null}
			};
	
	/*
	 *            No olvidemos que desplazamiento[0] positivo implica que la imagen debe moverse hacia el Sur y desplazamieno[1] positivo es irse al este
	 * 00 01 02
	 * 10 11 12   12 es el centro
	 * 20 21 22
	 */
	
	private double[] desplazamiento = {0.0, 0.0}; // Norte  y Este
	private double pixelMetro = 1.0;
	
	private boolean primeraVez = true;
	DrawingPanel panel = new DrawingPanel(955 + 200, 950);
	
	public void MyCanvas() {
		this.panel = new DrawingPanel(955 + 200, 950);
	}
	
	public boolean isPrimeraVez() {
		return primeraVez;
	}

	public void setPrimeraVez(boolean primeraVez) {
		this.primeraVez = primeraVez;
	}

	public double getLatitudGrados() {
		return latitudGrados;
	}
	
	public double getZoomLevel() {
		return zoomLevel;
	}

	public void setZoomLevel(double zoomLevel) {
		this.zoomLevel = zoomLevel;
	}

	public double resolucionMapa() {
		return (156543.04  * Math.cos(latitudGrados) / (Math.pow(2, this.zoomLevel) )); // Según BingMaps
		// Objetivo: sabiendo la resolucion, si movemos el mapa arriba debe moverlo adecuadamente
	}

	public void addDesplazamiento(double[] desplazamiento) {
		this.desplazamiento[0] += desplazamiento[0];
		this.desplazamiento[1] += desplazamiento[1];
	}

	public void setLatitudGrados(double latitudGrados) {
		this.latitudGrados = latitudGrados;
	}

	public double getLongitudGrados() {
		return longitudGrados;
	}

	public void setLongitudGrados(double longitudGrados) {
		this.longitudGrados = longitudGrados;
	}

	public double getAngulo() {
		return angulo;
	}

	public void setAngulo(double angulo) {
		this.angulo = angulo%(2*Math.PI);
	}

	public Color getMiColor() {
		return miColor;
	}

	public void setMiColor(Color miColor) {
		this.miColor = miColor;
	}

	public String getVelocidadTexto() {
		return velocidadTexto;
	}

	public void setVelocidadTexto(String velocidadTexto) {
		this.velocidadTexto = velocidadTexto;
	}

	public int getX() {
		return x;
	}

	public void setX(double x) {
		this.x = (int) (x * factorCanvasX);
	}

	public int getY() {
		return y;
	}

	public void setY(double y) {
		this.y = (int) (y * factorCanvasY);
	}

	public String getUTMTexto() {
		return UTMTexto;
	}

	public void setUTMTexto(String uTMTexto) {
		UTMTexto = uTMTexto;
	}

	public String getImageName() {
		return imageName;
	}

	public void setImageName(String imageName) {
		this.imageName = imageName;
	}

	public double getFactorCanvasX() {
		return factorCanvasX;
	}

	public void setFactorCanvasX(double escalaOriginalX) {
		this.factorCanvasX = imageWidth/escalaOriginalX;
	}

	public double getFactorCanvasY() {
		return factorCanvasY;
	}

	public void setFactorCanvasY(double escalaOriginalY) {
		this.factorCanvasY = imageHeight/escalaOriginalY;
	}
	
	public void repaint() {
		this.paint();
	}
	public void paint() {
		
		Graphics g = this.panel.getGraphics();
		pixelMetro = resolucionMapa();
		g.setColor(Color.BLACK);
        g.fillRect(0, 0, 955 + 200, 950);
		
		if(this.mapa[1][1] == null && this.primeraVez == false) { // Si la imagen central no está o no nos han mandado pintar antes, pues la cargamos

			try {
				System.out.println("CARGANDO COORDENADAS");
				
				//this.mapa[1][1] = t.getImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/40.3866,-3.6319?mapSize=1900,1900&zoomlevel=18&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
				// La de abajo aprece funcionar, pero si pongo el 18 como parámetro se rompe
				
				if (mapa[1][1] != null) this.mapa[1][1].flush();
				Toolkit t = Toolkit.getDefaultToolkit();
				
				String url = "https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt";
				Image temp;
				
				temp = //t.getImage(new URL(url));
				t.createImage(new URL(url));
				System.out.println("Pidiendo imagen de "+url);
				this.mapa[1][1] = temp;
				this.desplazamiento[0] = 0.0;
				this.desplazamiento[1] = 0.0;
				} catch (MalformedURLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
		} else {
			System.out.println("EL CENTRAL NO ES NULL");
		}
		
		System.out.println("Mi desplazamiento es"+(desplazamiento[0] * pixelMetro));
		
		//Toolkit t = Toolkit.getDefaultToolkit();
		
		if (desplazamiento[0] / pixelMetro < -anchoAlto/2) {
			System.out.println("21 es centro ahora");
			/*            
			 * 00 01 02
			 * 10 11 12   
			 * 20 21 22   21 es el centro ahora
			 *  n  n  n
			 */
			Image centro = null;
			
			if(this.mapa[2][1] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[2][1];
			
			Image[][] mapaAux = {
					{this.mapa[1][0], this.mapa[1][1], this.mapa[1][2]},
					{this.mapa[2][0], centro, this.mapa[2][2]},
					{null, null, null}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[0] = 0.0; // Reseteamos el desplazamiento N
			//desplazamiento[1] = 0.0;
			
		} else if (desplazamiento[0] / pixelMetro > anchoAlto/2) {
			System.out.println("01 es centro ahora");
			/ *  n  n  n           
			 * 00 01 02   01 es el centro ahora
			 * 10 11 12   
			 * 20 21 22
			 * /
			Image centro = null;
			
			if(this.mapa[0][1] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[0][1];
			
			Image[][] mapaAux = {
					{null, null, null},
					{this.mapa[0][0], centro, this.mapa[0][2]},
					{this.mapa[1][0], this.mapa[1][1], this.mapa[1][2]}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[0] = 0.0; // Reseteamos el desplazamiento N
			//desplazamiento[1] = 0.0;
			
		}
		// ESTE-OESTE
		if (desplazamiento[1] / pixelMetro < -anchoAlto/2) {
			System.out.println("10 es centro ahora");
			/ *            
			 *  n 00 01 02   
			 *  n 10 11 12   10 es el centro ahora
			 *  n 20 21 22
			 * 
			 * /
			Image centro = null;
			
			if(this.mapa[1][0] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[1][0];
			
			Image[][] mapaAux = {
					{null, this.mapa[0][0], this.mapa[0][1]},
					{null, centro, this.mapa[1][1]},
					{null, this.mapa[2][0], this.mapa[2][1]}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[1] = 0.0; // Reseteamos el desplazamiento E
			//desplazamiento[0] = 0.0;
			
		} else if (desplazamiento[1] / pixelMetro > anchoAlto/2) {
			System.out.println("12 es centro ahora");
			/ *            
			 * 00 01 02 n  
			 * 10 11 12 n   12 es el centro ahora
			 * 20 21 22 n
			 * 
			 * /
			Image centro = null;
			
			if(this.mapa[1][2] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[1][2];
			
			Image[][] mapaAux = {
					{this.mapa[0][1], this.mapa[0][2], null},
					{this.mapa[1][1], centro, null},
					{this.mapa[2][1], this.mapa[2][2], null}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[1] = 0.0; // Reseteamos el desplazamiento E
			desplazamiento[0] = 0.0;
		}
		/*
		// Para cada imagen del cuadrado transformamos
		Graphics2D g2d = (Graphics2D) g;
		// at.translate(this.x-img.getWidth(null) / 2, this.y-img.getHeight(null) / 2);
		AffineTransform atA1 = AffineTransform.getTranslateInstance(0, 0);
		atA1.translate(-this.desplazamiento[1]/pixelMetro - this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro -this.anchoAlto / 2);
		AffineTransform atA2 = AffineTransform.getTranslateInstance(0, 0);
		atA2.translate(-this.desplazamiento[1]/pixelMetro, this.desplazamiento[0]/pixelMetro -this.anchoAlto / 2);
		AffineTransform atA3 = AffineTransform.getTranslateInstance(0, 0);
		atA3.translate(-this.desplazamiento[1]/pixelMetro + this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro -this.anchoAlto / 2);
		
		AffineTransform atB1 = AffineTransform.getTranslateInstance(0, 0);
		atA1.translate(-this.desplazamiento[1]/pixelMetro - this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro);
		AffineTransform atB2 = AffineTransform.getTranslateInstance(0, 0);
		atB2.translate((this.desplazamiento[1]/pixelMetro -this.anchoAlto/2), (-this.desplazamiento[0]/pixelMetro -this.anchoAlto/2));
		AffineTransform atB3 = AffineTransform.getTranslateInstance(0, 0);
		atA1.translate(-this.desplazamiento[1]/pixelMetro + this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro);
		
		AffineTransform atC1 = AffineTransform.getTranslateInstance(0, 0);
		atC1.translate(-this.desplazamiento[1]/pixelMetro - this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro +this.anchoAlto / 2);
		AffineTransform atC2 = AffineTransform.getTranslateInstance(0, 0);
		atA2.translate(-this.desplazamiento[1]/pixelMetro, this.desplazamiento[0]/pixelMetro +this.anchoAlto / 2);
		AffineTransform atC3 = AffineTransform.getTranslateInstance(0, 0);
		atC3.translate(-this.desplazamiento[1]/pixelMetro + this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro +this.anchoAlto / 2);
		
		// Luego las pintamos de tal forma que la imagen central esté por encima y le sigan las demás por distancia ortogonal
        if (this.mapa[0][0] != null) g2d.drawImage(this.mapa[0][0], atA1, null); else System.out.println("E");
        if (this.mapa[0][2] != null) g2d.drawImage(this.mapa[0][2], atA3, null); else System.out.println("E");
        if (this.mapa[2][0] != null) g2d.drawImage(this.mapa[2][0], atC1, null); else System.out.println("E");
        if (this.mapa[2][2] != null) g2d.drawImage(this.mapa[2][2], atC3, null); else System.out.println("E");
		
        if (this.mapa[0][1] != null) g2d.drawImage(this.mapa[0][1], atA2, null); else System.out.println("E");
        if (this.mapa[1][0] != null) g2d.drawImage(this.mapa[1][0], atB1, null); else System.out.println("E");
        if (this.mapa[1][2] != null) g2d.drawImage(this.mapa[1][2], atB3, null); else System.out.println("E");
        if (this.mapa[2][1] != null) g2d.drawImage(this.mapa[2][1], atC2, null); else System.out.println("E");
        */
        if (this.mapa[1][1] != null && this.mapa[1][1].getWidth(null) != -1) { // Si la imagen está apropiadamente cargada
        	g.drawImage(this.mapa[1][1], (int)(this.desplazamiento[1]/pixelMetro -this.anchoAlto/2), (int)(-this.desplazamiento[0]/pixelMetro -this.anchoAlto/2), null);
        }
        
		// Flecha
        Toolkit t = Toolkit.getDefaultToolkit();
		Image img = t.getImage("pointIII.png");
        
        AffineTransform at = AffineTransform.getTranslateInstance(0, 0);
        at.translate(this.anchoAlto / 2, this.anchoAlto / 2);
		at.rotate(this.angulo,img.getWidth(null) / 2, img.getHeight(null) / 2);
		
		g2d.drawImage(img, at, null);
        
		// UI
        g.setColor(Color.LIGHT_GRAY);
        g.fillRect((int)this.anchoAlto, 0, 200, (int)this.anchoAlto);
        g.setColor(miColor);
        g.fillRect((int)this.anchoAlto, 0, 140 + 50, 100);

        g.setColor(Color.black); 
        Font fuente = g.getFont();
        Font fuente2 = fuente.deriveFont(200);
        g.setFont(fuente2);
        g.drawChars(velocidadTexto.toCharArray(), 0, velocidadTexto.length(), (int)(this.anchoAlto) + 15, 25);
        g.drawChars(UTMTexto.toCharArray(), 0, UTMTexto.length(), (int)(this.anchoAlto) + 15, 125);
        String lat = String.valueOf(this.latitudGrados);
        String lon = String.valueOf(this.longitudGrados);
        
        g.drawChars(lat.toCharArray(), 0, lat.length(), (int)(this.anchoAlto) + 15, 200);
        g.drawChars(lon.toCharArray(), 0, lon.length(), (int)(this.anchoAlto) + 15, 220);
        System.out.println("Primera vez = "+this.primeraVez);
        panel.copyGraphicsToScreen();
	}
	
	public static void main(String[] losArgumentos) {
		MyCanvas m = new MyCanvas();
		m.setImageName("ImagenINSIA.PNG");
		m.paint();
		/*JFrame f = new JFrame("Practica 2: Sistema de Geolocalizacion UPM-INSIA");
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		f.add(m);
		f.setSize(955 + 200, 950);
		f.setLocation(300, 0);
		f.setVisible(true);
		System.out.println("Imagen");
		f.addWindowListener(m);*/
	}

	@Override
	public void windowOpened(WindowEvent e) {
		// TODO Auto-generated method stub
		System.out.println("Ventana abierta");
		
	}

	@Override
	public void windowClosing(WindowEvent e) {
		// TODO Auto-generated method stub
		System.out.println("Ventana cerrandose, cerrando programa");
		System.exit(0);
		
	}

	@Override
	public void windowClosed(WindowEvent e) {
		// TODO Auto-generated method stub
		System.out.println("Ventana cerrada, cerrando programa");
		System.exit(0);
	}

	@Override
	public void windowIconified(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowDeiconified(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowActivated(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowDeactivated(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2219)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-05-11 14:54:12.685
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2219)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-05-11 14:54:12.686
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2219)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-05-11 14:54:14.769
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package LaPrac;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.awt.geom.AffineTransform;
import java.net.MalformedURLException;
import java.net.URL;

import javax.swing.JFrame;

public class MyCanvas /*extends Canvas*/ implements WindowListener{
	
	private int x = 0;
	private int y = 0;
	
	private String imageName = "ImagenUPMeINSIA.PNG"; // Imagen por defecto
	private int imageHeight = 0;
	private int imageWidth = 0;
	
	private double factorCanvasX = 1.0;
	private double factorCanvasY = 1.0;
	
	private double latitudGrados = 0.0; //40.36005333333333; //40.3866;
	private double longitudGrados = 0.0; //-3.5510916666666663; //-3.6319; 
	
	private Color miColor = Color.GREEN;
	
	private String velocidadTexto = "TEST km/h";
	
	private String UTMTexto = "XXXX";
	
	private double angulo = Math.PI;
	
	private double anchoAlto = 950; // Número de píxeles de ancho por alto
	
	// Map resolution = 156543.04 meters/pixel * cos(latitude) / (2 ^ zoomlevel)
	private double zoomLevel = 20;
	
	private Image[][] mapa = {
			{null, null, null},
			{null, null, null},
			{null, null, null}
			};
	
	/*
	 *            No olvidemos que desplazamiento[0] positivo implica que la imagen debe moverse hacia el Sur y desplazamieno[1] positivo es irse al este
	 * 00 01 02
	 * 10 11 12   12 es el centro
	 * 20 21 22
	 */
	
	private double[] desplazamiento = {0.0, 0.0}; // Norte  y Este
	private double pixelMetro = 1.0;
	
	private boolean primeraVez = true;
	DrawingPanel panel = new DrawingPanel(955 + 200, 950);
	
	public void MyCanvas() {
		this.panel = new DrawingPanel(955 + 200, 950);
	}
	
	public boolean isPrimeraVez() {
		return primeraVez;
	}

	public void setPrimeraVez(boolean primeraVez) {
		this.primeraVez = primeraVez;
	}

	public double getLatitudGrados() {
		return latitudGrados;
	}
	
	public double getZoomLevel() {
		return zoomLevel;
	}

	public void setZoomLevel(double zoomLevel) {
		this.zoomLevel = zoomLevel;
	}

	public double resolucionMapa() {
		return (156543.04  * Math.cos(latitudGrados) / (Math.pow(2, this.zoomLevel) )); // Según BingMaps
		// Objetivo: sabiendo la resolucion, si movemos el mapa arriba debe moverlo adecuadamente
	}

	public void addDesplazamiento(double[] desplazamiento) {
		this.desplazamiento[0] += desplazamiento[0];
		this.desplazamiento[1] += desplazamiento[1];
	}

	public void setLatitudGrados(double latitudGrados) {
		this.latitudGrados = latitudGrados;
	}

	public double getLongitudGrados() {
		return longitudGrados;
	}

	public void setLongitudGrados(double longitudGrados) {
		this.longitudGrados = longitudGrados;
	}

	public double getAngulo() {
		return angulo;
	}

	public void setAngulo(double angulo) {
		this.angulo = angulo%(2*Math.PI);
	}

	public Color getMiColor() {
		return miColor;
	}

	public void setMiColor(Color miColor) {
		this.miColor = miColor;
	}

	public String getVelocidadTexto() {
		return velocidadTexto;
	}

	public void setVelocidadTexto(String velocidadTexto) {
		this.velocidadTexto = velocidadTexto;
	}

	public int getX() {
		return x;
	}

	public void setX(double x) {
		this.x = (int) (x * factorCanvasX);
	}

	public int getY() {
		return y;
	}

	public void setY(double y) {
		this.y = (int) (y * factorCanvasY);
	}

	public String getUTMTexto() {
		return UTMTexto;
	}

	public void setUTMTexto(String uTMTexto) {
		UTMTexto = uTMTexto;
	}

	public String getImageName() {
		return imageName;
	}

	public void setImageName(String imageName) {
		this.imageName = imageName;
	}

	public double getFactorCanvasX() {
		return factorCanvasX;
	}

	public void setFactorCanvasX(double escalaOriginalX) {
		this.factorCanvasX = imageWidth/escalaOriginalX;
	}

	public double getFactorCanvasY() {
		return factorCanvasY;
	}

	public void setFactorCanvasY(double escalaOriginalY) {
		this.factorCanvasY = imageHeight/escalaOriginalY;
	}
	
	public void repaint() {
		this.paint();
	}
	public void paint() {
		
		Graphics g = this.panel.getGraphics();
		pixelMetro = resolucionMapa();
		g.setColor(Color.BLACK);
        g.fillRect(0, 0, 955 + 200, 950);
		
		if(this.mapa[1][1] == null && this.primeraVez == false) { // Si la imagen central no está o no nos han mandado pintar antes, pues la cargamos

			try {
				System.out.println("CARGANDO COORDENADAS");
				
				//this.mapa[1][1] = t.getImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/40.3866,-3.6319?mapSize=1900,1900&zoomlevel=18&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
				// La de abajo aprece funcionar, pero si pongo el 18 como parámetro se rompe
				
				if (mapa[1][1] != null) this.mapa[1][1].flush();
				Toolkit t = Toolkit.getDefaultToolkit();
				
				String url = "https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt";
				Image temp;
				
				temp = //t.getImage(new URL(url));
				t.createImage(new URL(url));
				System.out.println("Pidiendo imagen de "+url);
				this.mapa[1][1] = temp;
				this.desplazamiento[0] = 0.0;
				this.desplazamiento[1] = 0.0;
				} catch (MalformedURLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
		} else {
			System.out.println("EL CENTRAL NO ES NULL");
		}
		
		System.out.println("Mi desplazamiento es"+(desplazamiento[0] * pixelMetro));
		
		//Toolkit t = Toolkit.getDefaultToolkit();
		
		if (desplazamiento[0] / pixelMetro < -anchoAlto/2) {
			System.out.println("21 es centro ahora");
			/*            
			 * 00 01 02
			 * 10 11 12   
			 * 20 21 22   21 es el centro ahora
			 *  n  n  n
			 */
			Image centro = null;
			
			if(this.mapa[2][1] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[2][1];
			
			Image[][] mapaAux = {
					{this.mapa[1][0], this.mapa[1][1], this.mapa[1][2]},
					{this.mapa[2][0], centro, this.mapa[2][2]},
					{null, null, null}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[0] = 0.0; // Reseteamos el desplazamiento N
			//desplazamiento[1] = 0.0;
			
		} else if (desplazamiento[0] / pixelMetro > anchoAlto/2) {
			System.out.println("01 es centro ahora");
			/ *  n  n  n           
			 * 00 01 02   01 es el centro ahora
			 * 10 11 12   
			 * 20 21 22
			 * /
			Image centro = null;
			
			if(this.mapa[0][1] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[0][1];
			
			Image[][] mapaAux = {
					{null, null, null},
					{this.mapa[0][0], centro, this.mapa[0][2]},
					{this.mapa[1][0], this.mapa[1][1], this.mapa[1][2]}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[0] = 0.0; // Reseteamos el desplazamiento N
			//desplazamiento[1] = 0.0;
			
		}
		// ESTE-OESTE
		if (desplazamiento[1] / pixelMetro < -anchoAlto/2) {
			System.out.println("10 es centro ahora");
			/ *            
			 *  n 00 01 02   
			 *  n 10 11 12   10 es el centro ahora
			 *  n 20 21 22
			 * 
			 * /
			Image centro = null;
			
			if(this.mapa[1][0] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[1][0];
			
			Image[][] mapaAux = {
					{null, this.mapa[0][0], this.mapa[0][1]},
					{null, centro, this.mapa[1][1]},
					{null, this.mapa[2][0], this.mapa[2][1]}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[1] = 0.0; // Reseteamos el desplazamiento E
			//desplazamiento[0] = 0.0;
			
		} else if (desplazamiento[1] / pixelMetro > anchoAlto/2) {
			System.out.println("12 es centro ahora");
			/ *            
			 * 00 01 02 n  
			 * 10 11 12 n   12 es el centro ahora
			 * 20 21 22 n
			 * 
			 * /
			Image centro = null;
			
			if(this.mapa[1][2] == null) {
				try {
					Toolkit t = Toolkit.getDefaultToolkit();
					centro = t.createImage(new URL("https://dev.virtualearth.net/REST/v1/Imagery/Map/Aerial/"+this.getLatitudGrados()+","+this.getLongitudGrados()+"?mapSize=1900,1900&zoomlevel=20&key=AlG9KnK2iGsV9RmAXQVPnHvmIyz3m8jeLoe3SgwFRB5NY5uFnH2G5vbeubzEsBYt"));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			} else centro = this.mapa[1][2];
			
			Image[][] mapaAux = {
					{this.mapa[0][1], this.mapa[0][2], null},
					{this.mapa[1][1], centro, null},
					{this.mapa[2][1], this.mapa[2][2], null}
					};
			this.mapa = mapaAux; // TO-DO
			
			desplazamiento[1] = 0.0; // Reseteamos el desplazamiento E
			desplazamiento[0] = 0.0;
		}
		/*
		// Para cada imagen del cuadrado transformamos
		Graphics2D g2d = (Graphics2D) g;
		// at.translate(this.x-img.getWidth(null) / 2, this.y-img.getHeight(null) / 2);
		AffineTransform atA1 = AffineTransform.getTranslateInstance(0, 0);
		atA1.translate(-this.desplazamiento[1]/pixelMetro - this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro -this.anchoAlto / 2);
		AffineTransform atA2 = AffineTransform.getTranslateInstance(0, 0);
		atA2.translate(-this.desplazamiento[1]/pixelMetro, this.desplazamiento[0]/pixelMetro -this.anchoAlto / 2);
		AffineTransform atA3 = AffineTransform.getTranslateInstance(0, 0);
		atA3.translate(-this.desplazamiento[1]/pixelMetro + this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro -this.anchoAlto / 2);
		
		AffineTransform atB1 = AffineTransform.getTranslateInstance(0, 0);
		atA1.translate(-this.desplazamiento[1]/pixelMetro - this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro);
		AffineTransform atB2 = AffineTransform.getTranslateInstance(0, 0);
		atB2.translate((this.desplazamiento[1]/pixelMetro -this.anchoAlto/2), (-this.desplazamiento[0]/pixelMetro -this.anchoAlto/2));
		AffineTransform atB3 = AffineTransform.getTranslateInstance(0, 0);
		atA1.translate(-this.desplazamiento[1]/pixelMetro + this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro);
		
		AffineTransform atC1 = AffineTransform.getTranslateInstance(0, 0);
		atC1.translate(-this.desplazamiento[1]/pixelMetro - this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro +this.anchoAlto / 2);
		AffineTransform atC2 = AffineTransform.getTranslateInstance(0, 0);
		atA2.translate(-this.desplazamiento[1]/pixelMetro, this.desplazamiento[0]/pixelMetro +this.anchoAlto / 2);
		AffineTransform atC3 = AffineTransform.getTranslateInstance(0, 0);
		atC3.translate(-this.desplazamiento[1]/pixelMetro + this.anchoAlto / 2, this.desplazamiento[0]/pixelMetro +this.anchoAlto / 2);
		
		// Luego las pintamos de tal forma que la imagen central esté por encima y le sigan las demás por distancia ortogonal
        if (this.mapa[0][0] != null) g2d.drawImage(this.mapa[0][0], atA1, null); else System.out.println("E");
        if (this.mapa[0][2] != null) g2d.drawImage(this.mapa[0][2], atA3, null); else System.out.println("E");
        if (this.mapa[2][0] != null) g2d.drawImage(this.mapa[2][0], atC1, null); else System.out.println("E");
        if (this.mapa[2][2] != null) g2d.drawImage(this.mapa[2][2], atC3, null); else System.out.println("E");
		
        if (this.mapa[0][1] != null) g2d.drawImage(this.mapa[0][1], atA2, null); else System.out.println("E");
        if (this.mapa[1][0] != null) g2d.drawImage(this.mapa[1][0], atB1, null); else System.out.println("E");
        if (this.mapa[1][2] != null) g2d.drawImage(this.mapa[1][2], atB3, null); else System.out.println("E");
        if (this.mapa[2][1] != null) g2d.drawImage(this.mapa[2][1], atC2, null); else System.out.println("E");
        */
        if (this.mapa[1][1] != null && this.mapa[1][1].getWidth(null) != -1) { // Si la imagen está apropiadamente cargada
        	g.drawImage(this.mapa[1][1], (int)(this.desplazamiento[1]/pixelMetro -this.anchoAlto/2), (int)(-this.desplazamiento[0]/pixelMetro -this.anchoAlto/2), null);
        }
        
		// Flecha
        Toolkit t = Toolkit.getDefaultToolkit();
		Image img = t.getImage("pointIII.png");
        
        AffineTransform at = AffineTransform.getTranslateInstance(0, 0);
        at.translate(this.anchoAlto / 2, this.anchoAlto / 2);
		at.rotate(this.angulo,img.getWidth(null) / 2, img.getHeight(null) / 2);
		
		g2d.drawImage(img, at, null);
        
		// UI
        g.setColor(Color.LIGHT_GRAY);
        g.fillRect((int)this.anchoAlto, 0, 200, (int)this.anchoAlto);
        g.setColor(miColor);
        g.fillRect((int)this.anchoAlto, 0, 140 + 50, 100);

        g.setColor(Color.black); 
        Font fuente = g.getFont();
        Font fuente2 = fuente.deriveFont(200);
        g.setFont(fuente2);
        g.drawChars(velocidadTexto.toCharArray(), 0, velocidadTexto.length(), (int)(this.anchoAlto) + 15, 25);
        g.drawChars(UTMTexto.toCharArray(), 0, UTMTexto.length(), (int)(this.anchoAlto) + 15, 125);
        String lat = String.valueOf(this.latitudGrados);
        String lon = String.valueOf(this.longitudGrados);
        
        g.drawChars(lat.toCharArray(), 0, lat.length(), (int)(this.anchoAlto) + 15, 200);
        g.drawChars(lon.toCharArray(), 0, lon.length(), (int)(this.anchoAlto) + 15, 220);
        System.out.println("Primera vez = "+this.primeraVez);
        panel.copyGraphicsToScreen();
	}
	
	public static void main(String[] losArgumentos) {
		MyCanvas m = new MyCanvas();
		m.setImageName("ImagenINSIA.PNG");
		m.paint();
		/*JFrame f = new JFrame("Practica 2: Sistema de Geolocalizacion UPM-INSIA");
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		f.add(m);
		f.setSize(955 + 200, 950);
		f.setLocation(300, 0);
		f.setVisible(true);
		System.out.println("Imagen");
		f.addWindowListener(m);*/
	}

	@Override
	public void windowOpened(WindowEvent e) {
		// TODO Auto-generated method stub
		System.out.println("Ventana abierta");
		
	}

	@Override
	public void windowClosing(WindowEvent e) {
		// TODO Auto-generated method stub
		System.out.println("Ventana cerrandose, cerrando programa");
		System.exit(0);
		
	}

	@Override
	public void windowClosed(WindowEvent e) {
		// TODO Auto-generated method stub
		System.out.println("Ventana cerrada, cerrando programa");
		System.exit(0);
	}

	@Override
	public void windowIconified(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowDeiconified(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowActivated(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void windowDeactivated(WindowEvent e) {
		// TODO Auto-generated method stub
		
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2219)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-05-11 14:54:14.770
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2219)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-05-11 14:54:14.771
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2219)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.osgi 4 0 2023-05-11 21:49:39.684
!MESSAGE An error occurred while automatically activating bundle org.eclipse.papyrus.views.modelexplorer (1179).
!STACK 0
org.osgi.framework.BundleException: Exception in org.eclipse.papyrus.views.modelexplorer.Activator.start() of bundle org.eclipse.papyrus.views.modelexplorer.
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:835)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:763)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1028)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:511)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:572)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:401)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:480)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:170)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:519)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:622)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:196)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:920)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:246)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:63)
	at org.eclipse.ui.internal.commands.CommandStateProxy.loadState(CommandStateProxy.java:177)
	at org.eclipse.ui.internal.commands.CommandStateProxy.loadState(CommandStateProxy.java:161)
	at org.eclipse.ui.internal.commands.CommandStateProxy.shouldPersist(CommandStateProxy.java:255)
	at org.eclipse.ui.internal.commands.CommandService.dispose(CommandService.java:142)
	at org.eclipse.ui.internal.services.ServiceLocator$3.run(ServiceLocator.java:182)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.services.ServiceLocator.disposeServices(ServiceLocator.java:179)
	at org.eclipse.ui.internal.services.ServiceLocator.dispose(ServiceLocator.java:152)
	at org.eclipse.ui.internal.Workbench.shutdown(Workbench.java:2965)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:1124)
	at org.eclipse.ui.internal.Workbench.lambda$4(Workbench.java:1392)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1392)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1368)
	at org.eclipse.ui.internal.handlers.QuitHandler.execute(QuitHandler.java:46)
	at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:283)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.executeCommand(LegacyHandlerService.java:389)
	at org.eclipse.ui.internal.actions.CommandAction.runWithEvent(CommandAction.java:142)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
Caused by: java.lang.NullPointerException: Cannot invoke "org.eclipse.e4.core.contexts.IEclipseContext.get(java.lang.Class)" because "context" is null
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.registerLegacyHandler(LegacyHandlerService.java:164)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.registerLegacyHandler(LegacyHandlerService.java:158)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.activateHandler(LegacyHandlerService.java:306)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.activateHandler(LegacyHandlerService.java:294)
	at org.eclipse.papyrus.views.modelexplorer.Activator.start(Activator.java:70)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:814)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:806)
	... 76 more
Root exception:
java.lang.NullPointerException: Cannot invoke "org.eclipse.e4.core.contexts.IEclipseContext.get(java.lang.Class)" because "context" is null
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.registerLegacyHandler(LegacyHandlerService.java:164)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.registerLegacyHandler(LegacyHandlerService.java:158)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.activateHandler(LegacyHandlerService.java:306)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.activateHandler(LegacyHandlerService.java:294)
	at org.eclipse.papyrus.views.modelexplorer.Activator.start(Activator.java:70)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:814)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:806)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:763)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1028)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:511)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:572)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:401)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:480)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:170)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:519)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:622)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:196)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:920)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:246)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:63)
	at org.eclipse.ui.internal.commands.CommandStateProxy.loadState(CommandStateProxy.java:177)
	at org.eclipse.ui.internal.commands.CommandStateProxy.loadState(CommandStateProxy.java:161)
	at org.eclipse.ui.internal.commands.CommandStateProxy.shouldPersist(CommandStateProxy.java:255)
	at org.eclipse.ui.internal.commands.CommandService.dispose(CommandService.java:142)
	at org.eclipse.ui.internal.services.ServiceLocator$3.run(ServiceLocator.java:182)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.services.ServiceLocator.disposeServices(ServiceLocator.java:179)
	at org.eclipse.ui.internal.services.ServiceLocator.dispose(ServiceLocator.java:152)
	at org.eclipse.ui.internal.Workbench.shutdown(Workbench.java:2965)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:1124)
	at org.eclipse.ui.internal.Workbench.lambda$4(Workbench.java:1392)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1392)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1368)
	at org.eclipse.ui.internal.handlers.QuitHandler.execute(QuitHandler.java:46)
	at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:283)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.executeCommand(LegacyHandlerService.java:389)
	at org.eclipse.ui.internal.actions.CommandAction.runWithEvent(CommandAction.java:142)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)

!ENTRY org.eclipse.ui 4 0 2023-05-11 21:49:39.698
!MESSAGE The proxied state for 'org.eclipse.papyrus.views.modelexplorer.handler.SortElementState:org.eclipse.papyrus.views.modelexplorer.modelexplorer' could not be loaded
!STACK 1
org.eclipse.core.runtime.CoreException: Plug-in org.eclipse.papyrus.views.modelexplorer was unable to load class org.eclipse.papyrus.views.modelexplorer.handler.SortElementState.
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.throwException(RegistryStrategyOSGI.java:212)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:198)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:920)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:246)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:63)
	at org.eclipse.ui.internal.commands.CommandStateProxy.loadState(CommandStateProxy.java:177)
	at org.eclipse.ui.internal.commands.CommandStateProxy.loadState(CommandStateProxy.java:161)
	at org.eclipse.ui.internal.commands.CommandStateProxy.shouldPersist(CommandStateProxy.java:255)
	at org.eclipse.ui.internal.commands.CommandService.dispose(CommandService.java:142)
	at org.eclipse.ui.internal.services.ServiceLocator$3.run(ServiceLocator.java:182)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.services.ServiceLocator.disposeServices(ServiceLocator.java:179)
	at org.eclipse.ui.internal.services.ServiceLocator.dispose(ServiceLocator.java:152)
	at org.eclipse.ui.internal.Workbench.shutdown(Workbench.java:2965)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:1124)
	at org.eclipse.ui.internal.Workbench.lambda$4(Workbench.java:1392)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1392)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1368)
	at org.eclipse.ui.internal.handlers.QuitHandler.execute(QuitHandler.java:46)
	at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:283)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.executeCommand(LegacyHandlerService.java:389)
	at org.eclipse.ui.internal.actions.CommandAction.runWithEvent(CommandAction.java:142)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
Caused by: java.lang.ClassNotFoundException: An error occurred while automatically activating bundle org.eclipse.papyrus.views.modelexplorer (1179).
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:126)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:572)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:401)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:480)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:170)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:519)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:622)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:196)
	... 61 more
Caused by: org.osgi.framework.BundleException: Exception in org.eclipse.papyrus.views.modelexplorer.Activator.start() of bundle org.eclipse.papyrus.views.modelexplorer.
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:835)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:763)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1028)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:511)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	... 69 more
Caused by: java.lang.NullPointerException: Cannot invoke "org.eclipse.e4.core.contexts.IEclipseContext.get(java.lang.Class)" because "context" is null
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.registerLegacyHandler(LegacyHandlerService.java:164)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.registerLegacyHandler(LegacyHandlerService.java:158)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.activateHandler(LegacyHandlerService.java:306)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.activateHandler(LegacyHandlerService.java:294)
	at org.eclipse.papyrus.views.modelexplorer.Activator.start(Activator.java:70)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:814)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:806)
	... 76 more
!SUBENTRY 1 org.eclipse.equinox.registry 4 1 2023-05-11 21:49:39.702
!MESSAGE Plug-in org.eclipse.papyrus.views.modelexplorer was unable to load class org.eclipse.papyrus.views.modelexplorer.handler.SortElementState.
!STACK 0
java.lang.ClassNotFoundException: An error occurred while automatically activating bundle org.eclipse.papyrus.views.modelexplorer (1179).
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:126)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:572)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:401)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:480)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:170)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:519)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:622)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:196)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:920)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:246)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:63)
	at org.eclipse.ui.internal.commands.CommandStateProxy.loadState(CommandStateProxy.java:177)
	at org.eclipse.ui.internal.commands.CommandStateProxy.loadState(CommandStateProxy.java:161)
	at org.eclipse.ui.internal.commands.CommandStateProxy.shouldPersist(CommandStateProxy.java:255)
	at org.eclipse.ui.internal.commands.CommandService.dispose(CommandService.java:142)
	at org.eclipse.ui.internal.services.ServiceLocator$3.run(ServiceLocator.java:182)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.services.ServiceLocator.disposeServices(ServiceLocator.java:179)
	at org.eclipse.ui.internal.services.ServiceLocator.dispose(ServiceLocator.java:152)
	at org.eclipse.ui.internal.Workbench.shutdown(Workbench.java:2965)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:1124)
	at org.eclipse.ui.internal.Workbench.lambda$4(Workbench.java:1392)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1392)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1368)
	at org.eclipse.ui.internal.handlers.QuitHandler.execute(QuitHandler.java:46)
	at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:283)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.executeCommand(LegacyHandlerService.java:389)
	at org.eclipse.ui.internal.actions.CommandAction.runWithEvent(CommandAction.java:142)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
Caused by: org.osgi.framework.BundleException: Exception in org.eclipse.papyrus.views.modelexplorer.Activator.start() of bundle org.eclipse.papyrus.views.modelexplorer.
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:835)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:763)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1028)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:511)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	... 69 more
Caused by: java.lang.NullPointerException: Cannot invoke "org.eclipse.e4.core.contexts.IEclipseContext.get(java.lang.Class)" because "context" is null
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.registerLegacyHandler(LegacyHandlerService.java:164)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.registerLegacyHandler(LegacyHandlerService.java:158)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.activateHandler(LegacyHandlerService.java:306)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.activateHandler(LegacyHandlerService.java:294)
	at org.eclipse.papyrus.views.modelexplorer.Activator.start(Activator.java:70)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:814)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:806)
	... 76 more
